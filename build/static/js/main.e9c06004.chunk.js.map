{"version":3,"sources":["components/cheque-to-print/logo.svg","components/router-link/index.jsx","components/header/index.jsx","context/index.js","context/state-context.jsx","components/pages/tables-page/tables-page.jsx","actions/index.js","components/delete/index.jsx","components/table-cheque/table-cheque-list-item.jsx","components/table-cheque/table-cheque-list.jsx","components/table-cheque/table-cheque-total.jsx","components/cheque-to-print/cheque-to-print-item.jsx","components/cheque-to-print/index.jsx","functions/index.js","components/hoc/with-table.jsx","components/table-cheque/table-cheque-btns.jsx","components/table-cheque/index.js","components/table-cheque/table-cheque.jsx","components/products-list/product-list-nav.jsx","components/products-list/product-elem.jsx","components/products-list/product-list-tabs.jsx","components/products-list/index.js","components/products-list/product-list.jsx","components/modal/modal-description.jsx","components/modal/index.js","components/pages/single-page/single-page.jsx","components/pages/total-page/total-page.jsx","components/main/index.js","components/main/main.jsx","components/spinner/index.jsx","services/product-service.js","components/app/index.jsx","components/error-indicator/index.jsx","components/error-boundry/index.jsx","reducers/inital-state.js","reducers/index.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","RouterLink","_ref","children","path","_ref$classNames","classNames","react_default","a","createElement","react_router_dom","to","className","Header","router_link","StateContext","React","createContext","TablesPage","tables","useContext","map","table","key","id","concat","name","productAddedToCheque","productId","tableId","productCount","type","togledModalDescription","Delete","xmlns","version","width","height","x","y","viewBox","style","enableBackground","xmlSpace","d","fill","data-original","TableChequeListItem","title","count","total","onClick","value","onChange","evt","target","components_delete","mapDispatchToProps","connect","list","el","table_cheque_list_item","ID","description","SaleChanged","sale","undefined","subtotal","ChequeToPrintItem","item","ChequeToPrint","src","logo","alt","cheque_to_print_item","Date","toLocaleDateString","roundToTwo","num","Math","round","setSessionStorage","state","window","sessionStorage","setItem","JSON","stringify","calcTableTotal","arguments","length","ratio","updateTableList","tableIndex","action","products","productIndexInList","findIndex","newTable","newProduct","Object","objectSpread","toConsumableArray","slice","updateTableListItems","productInList","product","newDescription","_productInList$id","_productInList$title","_productInList$count","_productInList$descri","price","updateTableListItem","_i","_Object$keys","keys","find","findProduct","forEach","calcTableSubtotal","updateTables","index","buildCheque","WinPrint","open","document","write","ReactDOM","render","cheque_to_print","getElementById","focus","print","close","withTable","Wrapped","props","useParams","assign","closedTable","TableCheque","table_cheque_list","table_cheque_total","table_cheque_btns","ProductListNavElem","url","useRouteMatch","replace","ProductListNav","idx","product_list_nav_ProductListNavElem","ProductElem","data-id","_ref2","tagName","dataset","addProduct","react_router","cat","product_elem","ProductList","product_list_nav","product_list_tabs","changedProductDescription","ModalDescription","descriptionParams","currentDescription","isOpen","currentTable","Modal","onHide","show","Title","Body","Footer","SinglePage","Fragment","components_table_cheque","products_list","modal","Main","exact","tables_page_tables_page","single_page_single_page","total_page_total_page","Spinner","xmlnsXlink","margin","background","display","shapeRendering","preserveAspectRatio","stroke","transform","attributeName","dur","repeatCount","keyTimes","values","ProductService","getProducts","_callee","response","regenerator_default","wrap","_context","prev","next","fetch","location","origin","sent","ok","json","abrupt","Error","stop","productsLoaded","books","payload","loading","rest","objectWithoutProperties","useEffect","then","data","spinner","header","context","Provider","components_main","ErrorIndicator","ErrorBoundry","hasError","this","setState","error_indicator","Component","parse","getItem","initialState","reducer","lastCat","modifyProducts","sortedProducts","push","sortProducts","_action$tableId","_action$productId","closeTable","store","createStore","es","error_boundry_ErrorBoundry","app"],"mappings":"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","file":"static/js/main.e9c06004.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.67f772fd.svg\";","import React from 'react';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst RouterLink = ({children, path, classNames = \"\"}) => {\r\n    return <Link to={path} className={classNames} >{children}</Link>;\r\n}\r\n\r\nexport default RouterLink;","import React from 'react';\r\n\r\nimport RouterLink from \"../router-link\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"bg-primary\">\r\n            <nav className=\"container navbar justify-content-lg-start\">\r\n                <RouterLink path=\"/\" classNames=\"nav-link nav-item text-white\" >Столы</RouterLink>\r\n                <RouterLink path=\"/total\" classNames=\"nav-link nav-item text-white\" >Итог дня</RouterLink>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import StateContext from \"./state-context\";\r\n\r\nexport default StateContext;","import React from \"react\";\r\n\r\nconst StateContext = React.createContext();\r\n\r\nexport default StateContext;","import React, {useContext} from 'react';\r\n\r\nimport RouterLink from \"../../router-link\";\r\nimport StateContext from \"../../../context\";\r\n\r\nimport './tables-page.sass';\r\n\r\nconst TablesPage = () => {\r\n\r\n    const {tables} = useContext(StateContext);\r\n\r\n    return (\r\n        <section className=\"tablesPage\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {\r\n                        tables.map((table)=>{\r\n                            return (\r\n                                <div key={table.id} className=\"col-6 col-md-4 col-lg-3\">\r\n                                    <RouterLink  classNames=\"card py-4 tablesPage-item\" path={`single/${table.id}`} >\r\n                                        <h2 className={\"text-center text-dark\"} >{table.name}</h2>\r\n                                    </RouterLink>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default TablesPage;","const productsLoaded = (books) => {\r\n    return {\r\n        type: 'PRODUCTS_LOADED',\r\n        payload: books\r\n    }\r\n}\r\n\r\nconst SaleChanged = (sale, tableId) => {\r\n    return {\r\n        type: 'SALE_CHANGED',\r\n        tableId,\r\n        sale,\r\n    }\r\n}\r\n\r\nconst productAddedToCheque = (productId, tableId, productCount) => {\r\n    return {\r\n        type: 'PRODUCT_ADDED_TO_CHEQUE',\r\n        productId,\r\n        tableId,\r\n        productCount\r\n    }\r\n}\r\n\r\nconst togledModalDescription = (tableId, productId) => {\r\n    return {\r\n        type: 'TOGLED_MODAL_DESCRIPTION',\r\n        tableId,\r\n        productId\r\n    }\r\n}\r\n\r\nconst changedProductDescription = (tableId, productId, description) => {\r\n    return {\r\n        type: 'CHANGED_PRODUCT_DESCRIPTION',\r\n        tableId,\r\n        productId,\r\n        description\r\n    }\r\n}\r\n\r\nconst closedTable = (tableId) => {\r\n    return {\r\n        type: 'CLOSED_TABLE',\r\n        tableId\r\n    }\r\n}\r\n\r\nexport {\r\n    productsLoaded,\r\n    SaleChanged,\r\n    productAddedToCheque,\r\n    togledModalDescription,\r\n    changedProductDescription,\r\n    closedTable\r\n}","import React from \"react\";\r\n\r\nconst Delete = () => {\r\n    return (\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n                 version=\"1.1\"\r\n                 width=\"512\"\r\n                 height=\"512\"\r\n                 x=\"0\"\r\n                 y=\"0\"\r\n                 viewBox=\"0 0 511.992 511.992\"\r\n                 style={ {enableBackground: \"new 0 0 512 512\"} }\r\n                 xmlSpace=\"preserve\">\r\n                <g>\r\n                    <path xmlns=\"http://www.w3.org/2000/svg\" d=\"m415.402344 495.421875-159.40625-159.410156-159.40625 159.410156c-22.097656 22.09375-57.921875 22.09375-80.019532 0-22.09375-22.097656-22.09375-57.921875 0-80.019531l159.410157-159.40625-159.410157-159.40625c-22.09375-22.097656-22.09375-57.921875 0-80.019532 22.097657-22.09375 57.921876-22.09375 80.019532 0l159.40625 159.410157 159.40625-159.410157c22.097656-22.09375 57.921875-22.09375 80.019531 0 22.09375 22.097657 22.09375 57.921876 0 80.019532l-159.410156 159.40625 159.410156 159.40625c22.09375 22.097656 22.09375 57.921875 0 80.019531-22.097656 22.09375-57.921875 22.09375-80.019531 0zm0 0\" fill=\"#ff2d00\" data-original=\"#e76e54\"/>\r\n                </g>\r\n            </svg>\r\n\r\n)\r\n}\r\n\r\nexport default Delete;","import React from \"react\";\r\n\r\nimport Delete from \"../delete\";\r\n\r\nconst TableChequeListItem = ({title, count, total,\r\n                             id: productId, tableId, productAddedToCheque,\r\n                             togledModalDescription}) => {\r\n    return(\r\n        <div className=\"row\">\r\n            <div className=\"col-5 tableList-title\"\r\n                onClick={()=>{togledModalDescription(tableId, productId)}}>\r\n                {title}\r\n            </div>\r\n            <div className=\"col-4\">\r\n                <input type=\"number\"\r\n                       value={count}\r\n                       onChange={(evt) =>\r\n                           productAddedToCheque(productId, tableId, evt.target.value)}/>\r\n            </div>\r\n            <div className=\"col-3\">{`${total} руб`}</div>\r\n            <div\r\n                className=\"delete\"\r\n                onClick={ () => productAddedToCheque(productId, tableId, 0) }>\r\n                <Delete/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableChequeListItem;","import React from \"react\";\r\nimport {connect} from 'react-redux'\r\n\r\nimport {productAddedToCheque, togledModalDescription} from '../../actions';\r\nimport TableChequeListItem from \"./table-cheque-list-item\";\r\n\r\nconst TableChequeList = ({  list, id: tableId, productAddedToCheque,\r\n                            togledModalDescription}) => {\r\n    return (\r\n        <div className=\"tablePage-cheque-list\">\r\n            <div className=\"row tablePage-cheque-list-head\">\r\n                    <div className=\"col-5\"><h6>Название</h6></div>\r\n                    <div className=\"col-4\"><h6>Количество</h6></div>\r\n                    <div className=\"col-3\"><h6>Итого</h6></div>\r\n            </div>\r\n            {\r\n                list.map (el => {\r\n                    return <TableChequeListItem\r\n                        title={el.title}\r\n                        count={el.count}\r\n                        total={el.total}\r\n                        id={el.ID}\r\n                        key={el.ID}\r\n                        tableId={tableId}\r\n                        description={el.description}\r\n                        productAddedToCheque={productAddedToCheque}\r\n                        togledModalDescription={togledModalDescription}\r\n                    />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {productAddedToCheque, togledModalDescription};\r\n\r\nexport default connect(null, mapDispatchToProps)(TableChequeList);","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\n\r\nimport {SaleChanged} from '../../actions';\r\n\r\nconst TableChequeTotal = ({subtotal, sale, total, id, SaleChanged}) => {\r\n    const changeSale = (evt) => {\r\n        SaleChanged(evt.target.value, id);\r\n    }\r\n    return (\r\n        <table className=\"tablePage-cheque-total table\">\r\n            <tbody>\r\n                <tr>\r\n                    <th>Подытог</th>\r\n                    <td>{`${subtotal} руб`}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Скидка %</th>\r\n                    <td>\r\n                        <input type=\"number\" value={sale} onChange={changeSale}/>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Итого</th>\r\n                    <td>{`${total} руб`}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\nconst mapDispatchToProps = {SaleChanged};\r\nexport default connect(undefined, mapDispatchToProps)(TableChequeTotal);\r\n\r\n","import React from \"react\";\r\n\r\nconst ChequeToPrintItem = ({item}) => {\r\n    const {title, count, total, description} = item;\r\n    return(\r\n        <li>\r\n            <div>{`${title} - ${count} шт, ${total} руб`}</div>\r\n            {description ? <div>{description}</div> : null}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ChequeToPrintItem;","import React from \"react\";\r\nimport logo from './logo.svg';\r\n\r\nimport ChequeToPrintItem from \"./cheque-to-print-item\";\r\n\r\nconst ChequeToPrint = ({table}) => {\r\n    const {name, list, subtotal, sale, total} = table;\r\n    return (\r\n        <div className=\"chequeToPrint\">\r\n            <img src={logo} className=\"chequeToPrint-logo\" alt=\"jazzCafe\"/>\r\n            <ul>\r\n                {\r\n                    list.map( item => <ChequeToPrintItem item={item} key={item.ID} />)\r\n                }\r\n            </ul>\r\n            <div className=\"chequeToPrint-title\">Стол: {name}</div>\r\n            <div className=\"chequeToPrint-subtotal\">Подытог: {subtotal}</div>\r\n            <div className=\"chequeToPrint-sale\">Скидка: {sale}</div>\r\n            <div className=\"chequeToPrint-total\">Итог: {total}</div>\r\n            <div className=\"chequeToPrint-total\">Дата: {new Date().toLocaleDateString()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChequeToPrint;","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport ChequeToPrint from \"../components/cheque-to-print/\";\r\n\r\nconst roundToTwo = (num) => {\r\n    return +(Math.round(num + \"e+2\") + \"e-2\");\r\n}\r\n\r\nconst setSessionStorage = (state) => {\r\n    const {tables, total} = state\r\n    window.sessionStorage.setItem('tables', JSON.stringify(tables));\r\n    window.sessionStorage.setItem('total', total);\r\n    return state\r\n}\r\n\r\nconst calcTableSubtotal = (table) => {\r\n\r\n    let subtotal = 0;\r\n\r\n    table.list.forEach( el => {\r\n        subtotal += el.total;\r\n    })\r\n\r\n    return {\r\n        ...table,\r\n        subtotal: roundToTwo(subtotal)\r\n    }\r\n}\r\n\r\nconst calcTableTotal = (table, sale = table.sale) => {\r\n    const ratio = (100 - sale) / 100;\r\n    const total = roundToTwo( table.subtotal * ratio );\r\n    table.sale = sale;\r\n    table.total = total;\r\n    return table;\r\n}\r\n\r\nconst findProduct = (products, productId) => {\r\n    let product;\r\n    for(const cat of Object.keys(products)) {\r\n        product = products[cat].find(el => +el.ID === +productId);\r\n        if(product) return product;\r\n    }\r\n}\r\n\r\nconst updateTableListItems = (table, newProduct, productIndexInList) => {\r\n\r\n    if(newProduct.count <= 0){\r\n        return {\r\n            ...table,\r\n            list: [\r\n                ...table.list.slice(0, productIndexInList),\r\n                ...table.list.slice(productIndexInList + 1)\r\n            ]\r\n        }\r\n    }\r\n\r\n    if(productIndexInList < 0){\r\n        return {\r\n            ...table,\r\n            list: [\r\n                ...table.list,\r\n                newProduct\r\n            ]\r\n        }\r\n    }else{\r\n        return {\r\n            ...table,\r\n            list: [\r\n                ...table.list.slice(0, productIndexInList),\r\n                newProduct,\r\n                ...table.list.slice(productIndexInList + 1)\r\n            ]\r\n        }\r\n    }\r\n}\r\n\r\nconst updateTableListItem = (tableId, productInList = {}, product, productCount, newDescription) => {\r\n\r\n    if(newDescription !== undefined) {\r\n        return {\r\n            ...productInList,\r\n            description: newDescription\r\n        }\r\n    }\r\n    let{\r\n        id = product.ID,\r\n        title = product.title,\r\n        count = 0,\r\n        description = undefined} = productInList;\r\n\r\n    if(productCount === undefined) count += 1;\r\n    else count = productCount;\r\n\r\n    const price = tableId !== 'pickup-table' ? product.price : product['price_sale'] || product.price;\r\n\r\n    return  {\r\n        ID: id,\r\n        title: title,\r\n        count: count,\r\n        total: roundToTwo(count * price),\r\n        description: description\r\n    }\r\n}\r\n\r\nconst updateTableList = ({products, tables}, tableIndex, action) => {\r\n    const {productId, productCount, description, tableId} = action;\r\n    const table = tables[tableIndex];\r\n    const productIndexInList = table.list.findIndex( el => +el.ID === +productId);\r\n    const productInList = table.list[productIndexInList];\r\n    let product = findProduct(products, productId);\r\n\r\n    let newProduct = updateTableListItem(tableId, productInList, product, productCount, description);\r\n\r\n    let newTable = updateTableListItems(table, newProduct, productIndexInList);\r\n    newTable = calcTableSubtotal(newTable);\r\n    newTable = calcTableTotal(newTable);\r\n\r\n    return newTable;\r\n}\r\n\r\nconst sortProducts = (products) => {\r\n    const modifyProducts = [...products];\r\n    const sortedProducts = {};\r\n    let lastCat;\r\n\r\n    modifyProducts.forEach(el => {\r\n        if( el.cat ) lastCat = el.cat;\r\n        el.cat = el.cat ? el.cat : lastCat;\r\n\r\n        if(!el.price) return;\r\n\r\n        sortedProducts[el.cat] = sortedProducts[el.cat] || [];\r\n        sortedProducts[el.cat].push(el);\r\n    })\r\n\r\n    return sortedProducts;\r\n}\r\n\r\nconst updateTables = (tables, newTable, index) => {\r\n    return [\r\n        ...tables.slice(0, index),\r\n        newTable,\r\n        ...tables.slice(index + 1)\r\n    ]\r\n}\r\n\r\nconst togledModalDescription = (state, action) => {\r\n    const { tableId = null,\r\n        productId = null} = action;\r\n    return {\r\n        ...state,\r\n        descriptionParams: {\r\n            ...state.descriptionParams,\r\n            isOpen: !state.descriptionParams.isOpen,\r\n            tableId,\r\n            productId,\r\n        }\r\n    }\r\n}\r\n\r\nconst buildCheque = (table)=>{\r\n    const WinPrint = window.open('','','left=50,top=50,width=800,height=640,toolbar=0,scrollbars=1,status=0');\r\n    const CSS = `\r\n          <style>\r\n            *{\r\n              font-size: 20px;\r\n              line-height: 1.8;\r\n            }\r\n            img {\r\n            display: block;\r\n            margin: 0 auto;\r\n            }\r\n            ul{\r\n                border-bottom: 2px solid #c4c4c4;\r\n                border-top: 2px solid #c4c4c4;\r\n                padding: 30px 20px 30px 50px;\r\n                margin: 30px 0;\r\n            }\r\n        </style>`;\r\n    WinPrint.document.write(CSS);\r\n    WinPrint.document.write('<div id=\"root\" ></div>');\r\n    ReactDOM.render(<ChequeToPrint table={table} />,\r\n        WinPrint.document.getElementById('root'));\r\n    WinPrint.focus();\r\n    WinPrint.print();\r\n    WinPrint.close();\r\n\r\n}\r\n\r\nconst closeTable = (state, tableId) => {\r\n    const {tables} = state;\r\n    const tableIndex = tables.findIndex(el => el.id === tableId);\r\n    const total = +state.total + +tables[tableIndex].total;\r\n\r\n    buildCheque(tables[tableIndex]);\r\n\r\n    const newTable = {\r\n        id: tables[tableIndex].id,\r\n        name: tables[tableIndex].name,\r\n        list: [],\r\n        subtotal: 0,\r\n        sale: 0,\r\n        total: 0\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        tables: [\r\n            ...state.tables.slice(0, tableIndex),\r\n            newTable,\r\n            ...state.tables.slice(tableIndex + 1),\r\n        ],\r\n        total\r\n    };\r\n}\r\n\r\nexport {\r\n    roundToTwo,\r\n    calcTableSubtotal,\r\n    calcTableTotal,\r\n    findProduct,\r\n    updateTableListItems,\r\n    updateTableListItem,\r\n    updateTableList,\r\n    sortProducts,\r\n    updateTables,\r\n    togledModalDescription,\r\n    closeTable,\r\n    buildCheque,\r\n    setSessionStorage\r\n\r\n}","import React, {useContext} from \"react\";\r\nimport StateContext from \"../../context\";\r\nimport {useParams} from 'react-router-dom';\r\n\r\nconst withTable = (Wrapped) => {\r\n    return (props) => {\r\n        const {id} = useParams();\r\n        const {tables} = useContext(StateContext);\r\n        const table = tables.find( el => el.id === id);\r\n\r\n        return <Wrapped {...table} {...props}/>\r\n    }\r\n}\r\n\r\nexport default withTable;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {closedTable} from '../../actions';\r\nimport {buildCheque} from '../../functions';\r\nimport {withTable} from '../hoc';\r\n\r\nconst TableChequeBtns = (props) => {\r\n    const {id, closedTable} = props;\r\n    return(\r\n        <div className=\"row tablePage-cheque-btns\">\r\n            <div className=\"col-6\">\r\n                <button className=\"btn btn-secondary w-100\"\r\n                        onClick={()=> buildCheque(props)} >Распечатать</button>\r\n            </div>\r\n            <div className=\"col-6\">\r\n                <button className=\"btn btn-primary w-100\"\r\n                onClick={() => closedTable(id)} >Закрыть стол</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {closedTable}\r\n\r\nexport default connect(undefined,mapDispatchToProps)(withTable(TableChequeBtns));","import TableCheque from \"./table-cheque\";\r\n\r\nexport default TableCheque;","import React from 'react';\r\n\r\nimport TableChequeList from \"./table-cheque-list\";\r\nimport TableChequeTotal from \"./table-cheque-total\";\r\nimport TableChequeBtns from \"./table-cheque-btns\";\r\nimport {withTable} from \"../hoc/\";\r\n\r\nimport \"./table-cheque.sass\";\r\n\r\nconst TableCheque = ({total, sale, subtotal, id, list}) => {\r\n    return (\r\n        <div className=\"tablePage-cheque d-flex flex-column justify-content-between\">\r\n            <TableChequeList\r\n                list={list}\r\n                id={id}/>\r\n            <TableChequeTotal\r\n                subtotal={subtotal}\r\n                sale={sale}\r\n                total={total}\r\n                id={id}\r\n            />\r\n            <TableChequeBtns id={id} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withTable(TableCheque);","import React, {useContext} from \"react\";\r\nimport {Link, useRouteMatch} from 'react-router-dom';\r\nimport StateContext from \"../../context\";\r\n\r\nconst ProductListNavElem = ({title}) => {\r\n    const {url} = useRouteMatch();\r\n    return (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <Link to={`${url}/${title}`}\r\n                  replace\r\n                  className=\"btn btn-info mb-3 w-100\">\r\n                {title}\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProductListNav = () => {\r\n    const {products} = useContext(StateContext);\r\n    return (\r\n        <div className=\"row productList-nav align-content-start\">\r\n            {\r\n                Object.keys(products).map((el, idx) => {\r\n                    return <ProductListNavElem title={el} key={idx}/>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListNav;","import React from \"react\";\r\n\r\nconst ProductElem = ({product}) => {\r\n    return (\r\n        <div className={\"col-6 col-md-4\"}>\r\n            <div className=\"productList-item card mb-3 p-1 d-flex flex-column\">\r\n                <h6 className=\"productItem-title card-title text-center mt-2 flex-grow-1\">{product.title}</h6>\r\n                <button data-id={product.ID} className={\"btn btn-primary w-100\"}>Добавить</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductElem;","import React from \"react\";\r\nimport {Switch, Route, useRouteMatch, useParams} from 'react-router';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {productAddedToCheque} from '../../actions';\r\nimport ProductElem from './product-elem';\r\n\r\n\r\n\r\nconst addProduct = (evt, tableId, productAddedToCheque) => {\r\n    const {target} = evt;\r\n    if( target.tagName !== \"BUTTON\" ) return;\r\n    productAddedToCheque(target.dataset.id, tableId)\r\n}\r\n\r\nconst ProductListTabs = ({products, productAddedToCheque}) => {\r\n    const {path} = useRouteMatch();\r\n    const {id} = useParams();\r\n\r\n    return (\r\n        <div className={\"row productList-tab\"}\r\n             onClick={(evt) => addProduct(evt, id, productAddedToCheque) }>\r\n            <Switch>\r\n                {\r\n                    Object.keys(products).map((cat, idx) => {\r\n                        return (\r\n                        <Route path={`${path}/${cat}`} key={`cat-${idx}`}>\r\n                        {\r\n                            products[cat].map(el =>{\r\n                                return <ProductElem product={el} key={el.ID}/>\r\n                            })\r\n                        }\r\n                        </Route>\r\n                        )\r\n                    })\r\n                }\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst setStateToProps = ({products}) => {\r\n    return {\r\n        products\r\n    }\r\n}\r\nconst  mapDispatchToProps = {productAddedToCheque};\r\n\r\nexport default connect(setStateToProps, mapDispatchToProps)(ProductListTabs);","import ProductList from \"./product-list\";\r\n\r\nexport default ProductList;","import React from 'react';\r\n\r\nimport ProductListNav from \"./product-list-nav\";\r\nimport ProductListTabs from './product-list-tabs'\r\n\r\nimport './produc-list.sass';\r\n\r\nconst ProductList = () => {\r\n\r\n    return (\r\n        <div className=\"productList d-flex flex-column\">\r\n            <ProductListNav />\r\n            <ProductListTabs />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductList;","import React from \"react\"\r\nimport {Modal} from \"react-bootstrap\";\r\nimport {connect} from 'react-redux';\r\n\r\nimport {togledModalDescription, changedProductDescription} from '../../actions';\r\n\r\nimport './modal-description.sass';\r\n\r\nconst ModalDescription = ({descriptionParams, tables, changedProductDescription, togledModalDescription}) => {\r\n    const {isOpen, tableId, productId} = descriptionParams;\r\n    const currentTable = tables.find( el => el.id === tableId );\r\n    let currentProduct, currentDescription;\r\n    if(currentTable){\r\n        currentProduct = currentTable.list.find( el => el.ID === productId );\r\n        currentDescription = currentProduct.description;\r\n    }\r\n    return (\r\n        <Modal\r\n            onHide={togledModalDescription}\r\n            show={isOpen}>\r\n            <Modal.Header>\r\n                <Modal.Title>Укажите комментарий к позиции</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <textarea\r\n                    name=\"description\"\r\n                    value={currentDescription}\r\n                    onChange={(evt) => {\r\n                        changedProductDescription(tableId, productId, evt.target.value)\r\n                    }}/>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={togledModalDescription}>\r\n                    ok\r\n                </button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\nconst mapStateToProps = ({descriptionParams, tables}) => {\r\n        return { descriptionParams, tables }\r\n    }\r\n\r\nconst mapDispatchToProps = {togledModalDescription, changedProductDescription};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalDescription);","import ModalDescription from './modal-description';\r\n\r\nexport default ModalDescription;","import React from 'react';\r\nimport {useParams} from 'react-router';\r\n\r\nimport TableCheque from \"../../table-cheque\";\r\nimport ProductList from \"../../products-list\";\r\nimport ModalDescription from \"../../modal\";\r\n\r\nimport \"./single-page.sass\";\r\n\r\nconst SinglePage = () => {\r\n\r\n    const { id } = useParams();\r\n\r\n    return (\r\n        <>\r\n            <section className=\"singlePage\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-lg-5\">\r\n                            <TableCheque id={id} />\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-7\">\r\n                            <ProductList />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <ModalDescription />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SinglePage;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './total-page.sass';\r\n\r\nconst TotalPage = ({total}) => {\r\n    return (\r\n        <section className=\"totalPage\">\r\n            <div className=\"container\">\r\n                <h3>{new Date().toLocaleDateString()}</h3>\r\n                <h1>{`${total} руб`}</h1>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({total}) => {\r\n    return {total}\r\n}\r\n\r\nexport default connect(mapStateToProps)(TotalPage);","import Main from './main';\r\n\r\nexport default Main;","import {Route, Switch} from \"react-router-dom\";\r\nimport {SinglePage, TablesPage, TotalPage} from \"../pages\";\r\nimport React from \"react\";\r\n\r\nconst Main = () => {\r\n    return (\r\n        <main className=\"App\">\r\n            <Switch>\r\n                <Route path=\"/\" exact >\r\n                    <TablesPage />\r\n                </Route>\r\n                <Route path=\"/single/:id\" >\r\n                    <SinglePage />\r\n                </Route>\r\n                <Route path=\"/total\" >\r\n                    <TotalPage />\r\n                </Route>\r\n\r\n            </Switch>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport './style.sass'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinnerWrap\">\r\n            <svg\r\n                xmlns={\"http://www.w3.org/2000/svg\"}\r\n                xmlnsXlink={\"http://www.w3.org/1999/xlink\" }\r\n                style={ {margin: 'auto', background: 'none', display: 'block', shapeRendering: 'auto',} }\r\n                width=\"100px\" height=\"100px\"\r\n                viewBox=\"0 0 100 100\"\r\n                preserveAspectRatio=\"xMidYMid\"\r\n            >\r\n                <path d=\"M18 50A32 32 0 0 0 82 50A32 33.2 0 0 1 18 50\" fill=\"#292664\" stroke=\"none\" transform=\"rotate(269.75 50 50.6)\">\r\n                    <animateTransform attributeName=\"transform\" type=\"rotate\" dur=\"0.78125s\" repeatCount=\"indefinite\" keyTimes=\"0;1\" values=\"0 50 50.6;360 50 50.6\" />\r\n                </path>\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","\r\n\r\nexport default class ProductService{\r\n    getProducts = async () => {\r\n        const response = await fetch(`${window.location.origin}/products.json`);\r\n        if( response.ok ){\r\n            return await response.json();\r\n        }else{\r\n            new Error(\"Can't fetch products\");\r\n        }\r\n    }\r\n}","import React, {useEffect} from \"react\";\nimport {connect} from 'react-redux';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nimport Header from \"../header\";\nimport Main from \"../main\";\nimport Spinner from \"../spinner\";\nimport {ProductService} from \"../../services/\";\nimport {productsLoaded} from '../../actions';\nimport StateContext from \"../../context\";\n\nfunction App({loading, productsLoaded, ...rest}) {\n\n    const {getProducts} = new ProductService();\n    useEffect(()=>{\n        getProducts()\n            .then(data => {\n                productsLoaded(data);\n            })\n    }, [])\n\n    if(loading) return <Spinner />\n    return (<Router>\n                <Header/>\n                <StateContext.Provider value={rest} >\n                    <Main />\n                </StateContext.Provider>\n            </Router>);\n}\n\nconst mapStateToProps = (state) => {\n    return state;\n};\n\nconst mapDispatchToProps = {\n    productsLoaded\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\r\nimport './style.sass';\r\n\r\nconst  ErrorIndicator = () => {\r\n    return (\r\n        <div className='errorIndicator'>\r\n            <h2 className=\"text-danger\">Возникла непредвиденная ошибка, скорее звоните мне!!!</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorIndicator;","import React, { Component } from 'react';\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nexport default class ErrorBoundry extends Component {\r\n    state = {\r\n        hasError: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render(){\r\n        if( this.state.hasError ) return <ErrorIndicator />\r\n            else return this.props.children;\r\n    }\r\n}","const newtTables = [\r\n    {\r\n        id: 'table-1',\r\n        name: \"Стол 1\",\r\n        list: [],\r\n        subtotal: 0,\r\n        sale: 0,\r\n        total: 0\r\n    },\r\n    {\r\n        id: 'table-2',\r\n        name: \"Стол 2\",\r\n        list: [],\r\n        subtotal: 0,\r\n        sale: 0,\r\n        total: 0\r\n    },\r\n    {\r\n        id: 'table-3',\r\n        name: \"Стол 3\",\r\n        list: [],\r\n        subtotal: 0,\r\n        sale: 0,\r\n        total: 0\r\n    },\r\n    {\r\n        id: 'table-4',\r\n        name: \"Стол 4\",\r\n        list: [],\r\n        subtotal: 0,\r\n        sale: 0,\r\n        total: 0\r\n    },\r\n    {\r\n        id: 'table-5',\r\n        name: \"Стол 5\",\r\n        list: [],\r\n        subtotal: 0,\r\n        sale: 0,\r\n        total: 0\r\n    },\r\n    {\r\n        id: 'table-6',\r\n        name: \"Стол 6\",\r\n        list: [],\r\n        subtotal: 0,\r\n        sale: 0,\r\n        total: 0\r\n    },\r\n    {\r\n        id: 'table-7',\r\n        name: \"Стол 7\",\r\n        list: [],\r\n        subtotal: 0,\r\n        sale: 0,\r\n        total: 0\r\n    },\r\n    {\r\n        id: 'table-8',\r\n        name: \"Стол 8\",\r\n        list: [],\r\n        subtotal: 0,\r\n        sale: 0,\r\n        total: 0\r\n    },\r\n    {\r\n        id: 'table-9',\r\n        name: \"Стол 9\",\r\n        list: [],\r\n        subtotal: 0,\r\n        sale: 0,\r\n        total: 0\r\n    },\r\n    {\r\n        id: 'table-10',\r\n        name: \"Стол 10\",\r\n        list: [],\r\n        subtotal: 0,\r\n        sale: 0,\r\n        total: 0\r\n    },\r\n    {\r\n        id: 'table-11',\r\n        name: \"Стол 11\",\r\n        list: [],\r\n        subtotal: 0,\r\n        sale: 0,\r\n        total: 0\r\n    },\r\n    {\r\n        id: 'table-12',\r\n        name: \"Стол 12\",\r\n        list: [],\r\n        subtotal: 0,\r\n        sale: 0,\r\n        total: 0\r\n    },\r\n    {\r\n        id: 'table-13',\r\n        name: \"Стол 13\",\r\n        list: [],\r\n        subtotal: 0,\r\n        sale: 0,\r\n        total: 0\r\n    },\r\n    {\r\n        id: 'table-14',\r\n        name: \"Стол 14\",\r\n        list: [],\r\n        subtotal: 0,\r\n        sale: 0,\r\n        total: 0\r\n    },\r\n    {\r\n        id: 'pickup-table',\r\n        name: \"Самовывоз\",\r\n        list: [],\r\n        subtotal: 0,\r\n        sale: 0,\r\n        total: 0\r\n    },\r\n\r\n];\r\nconst sessionTables = JSON.parse(window.sessionStorage.getItem('tables'));\r\nconst tables = sessionTables || newtTables;\r\n\r\nconst total = window.sessionStorage.getItem('total') || 0;\r\n\r\nconst initialState = {\r\n    loading: true,\r\n    products: [],\r\n    total,\r\n    tables,\r\n    descriptionParams: {\r\n      isOpen: false,\r\n      tableId: null,\r\n      productId: null\r\n    },\r\n\r\n};\r\n\r\nexport default initialState;","import initialState from \"./inital-state\";\r\nimport {\r\n    calcTableTotal,\r\n    updateTableList,\r\n    sortProducts,\r\n    updateTables,\r\n    togledModalDescription,\r\n    closeTable,\r\n    setSessionStorage} from '../functions';\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let tableIndex,newTable, tables;\r\n\r\n    switch (action.type) {\r\n        case 'PRODUCTS_LOADED' :\r\n            const products = sortProducts(action.payload);\r\n            return {\r\n                ...state,\r\n                products,\r\n                loading: false\r\n            };\r\n        case 'SALE_CHANGED' :\r\n            tableIndex = state.tables.findIndex( el => el.id === action.tableId);\r\n            newTable = calcTableTotal(state.tables[tableIndex], action.sale);\r\n            tables = updateTables(state.tables, newTable, tableIndex);\r\n            return setSessionStorage({\r\n                ...state,\r\n                tables\r\n            });\r\n        case 'PRODUCT_ADDED_TO_CHEQUE':\r\n            tableIndex = state.tables.findIndex( el => el.id === action.tableId);\r\n            newTable = updateTableList( state, tableIndex, action);\r\n            tables = updateTables(state.tables, newTable, tableIndex);\r\n            return setSessionStorage({\r\n                ...state,\r\n                tables\r\n            });\r\n        case 'TOGLED_MODAL_DESCRIPTION':\r\n           return togledModalDescription(state, action);\r\n        case 'CHANGED_PRODUCT_DESCRIPTION':\r\n            tableIndex = state.tables.findIndex( el => el.id === action.tableId);\r\n            newTable = updateTableList( state, tableIndex, action);\r\n            tables = updateTables(state.tables, newTable, tableIndex);\r\n            return setSessionStorage({\r\n                ...state,\r\n                tables\r\n            });\r\n        case 'CLOSED_TABLE':\r\n            return setSessionStorage(closeTable(state, action.tableId))\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default reducer;","import { createStore } from \"redux\";\r\nimport reducer from \"./reducers\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app';\nimport ErrorBoundry from \"./components/error-boundry\";\n\nimport store from './store';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.sass';\n\nReactDOM.render(\n  <Provider store={store}>\n      <ErrorBoundry >\n          <App />\n      </ErrorBoundry>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}